name: Auth & Security Settings

settings:
  - key: dropGroup
    value: EMPTY
    text: |
      Group to drop privileges to. The <a href="#pcapDir">pcapDir</a> must be writable by this
      group or to the user specified by dropUser

  - key: dropUser
    value: EMPTY
    text: |
      User to drop privileges to. The <a href="#pcapDir">pcapDir</a> must be writable by this
      user or to the group specified by dropGroup

  - key: httpRealm
    value: Moloch
    text: |
      HTTP Digest Realm - Must be in the default section of
      configuration file. Changing the value will cause all previous
      stored passwords to no longer work.

  - key: serverSecret
    value: 'Value of <a href="#passwordSecret">passwordSecret</a>'
    text: |
      The server-to-server shared key. It must be set in the [default]
      section of the config file, and all viewers in the arkime cluster
      must have the same value. It can be, and should be changed
      periodically.

  - key: passwordSecret
    value: "password"
    text: |
      Password hash secret - Must be in [default] section of the config file, and all viewers in the arkime cluster must have the same value.
      Since OpenSearch/Elasticsearch is wide open by default, we encrypt the stored password hashes with this so a malicious person can't insert a working new account.
      It is also used for secure server-to-server communication if serverSecret is not set a different value.
      Don't set if you do not want user authentication.
      Changing the value will make all previously stored passwords no longer work.


  - key: authMode
    value: EMPTY
    text: |
      (Since 5.0.0) This setting controls what auth mode is used, if authMode or userNameHeader isn't set then digest is used by default. Before Arkime 5 userNameHeader is used to select the auth mode.
      Possible values are:
      <ul>
        <li>"basic" - Use basic auth where browser based basic authentication is used.</li>
        <li>"basic+oidc" - Use basic auth when present otherwise use oidc auth. This is useful when you want to support API calls using basic auth. WARNING - the password for basic auth is from Arkime which isn't synced with oidc.</li>
        <li>"basic+form" - Use basic auth when present otherwise use form auth. This is useful when you want to support API calls using basic auth.</li>
        <li>"digest" or EMPTY - Use digest auth where browser based digest authentication is used.</li>
        <li>"form" - Use a html form to enter the user/password.</li>
        <li>"oidc" -  Use OIDC authentication.</li>
        <li>"anonymous" - Use anonymous authentication.</li>
        <li>"s2s" -  Only server to server authentication is allowed</li>
      </ul>
      If using central viewers for maximum security set all viewers to use s2s except the central viewer.
      Each user must have Web Auth Header checkbox set to support other methods besides digest.
      <br><br>
      For authentication modes that require cookies (form, oidc, saml) you may need to also change:
      <ul>
        <li> <a href="#authCookieSecure">authCookieSecure</a> - Set to <b>false</b> if using http WITHOUT a reverse proxy. This is insecure.</li>
        <li> <a href="#authTrustProxy">authTrustProxy</a> - Set to <b>true</b> if using http WITH a https reverse proxy.</li>
      </ul>

  - key: userNameHeader
    value: EMPTY
    text: |
      If using Arkime 5 or later please use <a href="#authMode">authMode</a> to select the auth mode and only use userNameHeader in header auth mode.
      Arkime 6 will no longer support this setting, except for the header name.
      Before Arkime 5 this setting controls what auth mode is used OR what header to user when using header auth.
      Possible values are:
      <ul>
        <li>"digest" - Run in digest mode where browser based authentication is used.</li>
        <li>"oidc" - (Since 4.2.0) Use OIDC authentication.</li>
        <li>"anonymous" - (Since 4.2.0) Use anonymous authentication.</li>
        <li>"s2s" - (Since 4.2.0) Only server to server authentication is allowed</li>
        <li>Any other value - The lowercase http header key to use for determining the user id.
            It is recommended you set viewHost to localhost when using this setting, or use iptables, otherwise a hacker can just send this header.
        </li>
      </ul>
      If using central viewers for maximum security set all viewers to use s2s except the central viewer.
      Each user must have Web Auth Header checkbox set to support other methods besides digest.

  - key: requiredAuthHeader
    value: EMPTY
    text: |
      Used for allowing an external system like LDAP or Active Directory to
      manage user provisioning and activation/deactivation.  It is assumed that the
      header contains a list of user roles (like active directory groups)
      which are inspected against the value in <code>requiredAuthHeaderVal</code> (see below)
      to verify that the user is in the appropriate group (ie. "ArkimeUsers").  If
      so, the user is authorized to use the system, and if an account does not
      already exist for them in the arkime user store,
      it is created (see <code>userAutoCreateTmpl</code>)

  - key: requiredAuthHeaderVal
    value: EMPTY
    text: |
      See <a href="#requiredAuthHeader">requiredAuthHeader</a> for more information.

  - key: userAutoCreateTmpl
    value: EMPTY
    text: |
      When using <code>requiredAuthHeader</code> to externalize provisioning
      of users to a system like LDAP/AD, this configuration parameter is used
      to define the JSON structure used to automatically create a arkime user
      in the arkime users database if one does not exist.  The user will only
      be created if the <code>requiredAuthHeader</code> includes the expected
      value in <code>requiredAuthHeaderVal</code>, and is not automatically deleted
      if the auth headers are not present.  Values can be populated into
      the creation JSON to dynamically populate fields into the user database,
      which are passed in as HTTP headers along with the user and auth headers.
      The example value below creates a user with a userId pulled from the
      <code>http_auth_http_user</code> HTTP header with a name pulled from
      the <code>http_auth_mail</code> user header.  It is expected that these
      headers are passed in from an apache (or similar) instance that fronts
      the arkime viewer as described in the documentation supporting <code>userNameHeader</code>
      <code>
        {"userId": "${this.http_auth_http_user}", "userName": "${this.http_auth_mail}",
        "enabled": true, "webEnabled": true, "headerAuthEnabled": true,
        "emailSearch": true, "createEnabled": false, "removeEnabled": false, "packetSearch": true,
        "roles": ["arkimeUser", "cont3xtUser"]}
      </code>

  - key: caTrustFile
    value: EMPTY
    text: |
      Optional file with PEM encoded certificates to use when validating certs. Make sure to read this <a href="faq#self-signed-ssl-tls-certificates">FAQ entry.</a>

  - key: userAuthIps
    value: "For header auth 127/8 and ::1, otherwise all ips"
    text: |
      (Since 3.4.0) A comma separated list of Ips allowed to be used for authenticated calls

  - key: authTrustProxy
    value: EMPTY
    text: |
      Used to set the express "trust proxy" setting that might be needed if viewer is running in http mode and a reverse proxy is being used in https mode.
      Please <a href="https://expressjs.com/en/guide/behind-proxies.html">read more</a> about the setting and possible values.

  - key: authCookieSecure
    value: true
    text: |
      (Since 5.0.0) This setting controls if authentication cookies are marked as "secure".
      If using cookie based auth (form, oidc, saml) over http change this to false.

  - key: authCookieSameSite
    value: 'Lax'
    text: |
      (Since 5.0.0) For auth cookies (form, oidc, saml) what value is used for sameSite.

  - key: logoutUrl
    value: Only set for form authMode
    text: |
      (Since 5.0.0) Show a logout button in the UI that will take the user to a page to logout. For form authMode we provide a working version.

  - key: loginMessage
    value: EMPTY
    text: An optional login message to present on the login page when using authMode=form
